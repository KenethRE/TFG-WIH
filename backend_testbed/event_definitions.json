{
  "MouseEvents": [
    {
      "type": "click",
      "description": "Fired when a pointing device button is pressed and released over an element.",
      "triggeringElement": ["button", "a", "canvas"],
      "userAction": "Press and release a mouse button."
    },
    {
      "type": "dblclick",
      "description": "Fired when a pointing device button is double-clicked over an element.",
      "triggeringElement": ["button", "a"],
      "userAction": "Press and release a mouse button twice quickly."
    },
    {
      "type": "mousedown",
      "description": "Fired when a pointing device button is pressed down over an element.",
      "triggeringElement": ["canvas"],
      "userAction": "Press a mouse button down."
    },
    {
      "type": "mouseup",
      "description": "Fired when a pointing device button is released over an element.",
      "triggeringElement": ["canvas"],
      "userAction": "Release a mouse button."
    },
    {
      "type": "mousemove",
      "description": "Fired when a pointing device is moved while it is over an element.",
      "triggeringElement": ["canvas"],
      "userAction": "Move the mouse while it is over an element."
    }
  ]
  ,
  "KeyboardEvents": [
    {
      "type": "keypress",
      "description": "Fired when a key that produces a character value is pressed down.",
      "triggeringElement": ["input", "textarea"],
      "userAction": "Press a key that results in a character value (e.g., 'a', '1')."
    },
    {
      "type": "keydown",
      "description": "Fired when a key is pressed down.",
      "triggeringElement": ["input", "textarea"],
      "userAction": "Press any key on the keyboard."
    },
    {
      "type": "keyup",
      "description": "Fired when a key is released.",
      "triggeringElement": ["input", "textarea"],
      "userAction": "Release a key on the keyboard."
    }
  ],
  "TouchEvents": [
    {
      "type": "touchstart",
      "description": "Fired when one or more touch points are placed on the touch surface.",
      "triggeringElement": ["div", "canvas", "img"],
      "userAction": "Place one or more fingers on the touch surface."
    },
    {
      "type": "touchmove",
      "description": "Fired when one or more touch points are moved along the touch surface.",
      "triggeringElement": ["div", "canvas", "img"],
      "userAction": "Move one or more fingers along the touch surface."
    },
    {
      "type": "touchend",
      "description": "Fired when one or more touch points are removed from the touch surface.",
      "triggeringElement": ["div", "canvas", "img"],
      "userAction": "Lift one or more fingers off the touch surface."
    },
    {
      "type": "touchcancel",
      "description": "Fired when the touch point has been disrupted in an implementation-specific manner.",
      "triggeringElement": ["div", "canvas", "img"],
      "userAction": "The touch is interrupted or canceled due to a system event."
    }
  ],
  "DragAndDropEvents": [
    {
      "type": "dragstart",
      "description": "Fired when the user starts dragging an element or text selection.",
      "triggeringElement": ["img", "div", "span"],
      "userAction": "Start dragging an element with the mouse."
    },
    {
      "type": "drag",
      "description": "Fired when an element or text selection is being dragged.",
      "triggeringElement": ["img", "div", "span"],
      "userAction": "Move the dragged element."
    },
    {
      "type": "dragenter",
      "description": "Fired when a dragged item enters a valid drop target.",
      "triggeringElement": ["div", "section", "ul"],
      "userAction": "Drag an item over a valid drop target."
    },
    {
      "type": "dragover",
      "description": "Fired when an element or text selection is being dragged over a valid drop target.",
      "triggeringElement": ["div", "section", "ul"],
      "userAction": "Keep dragging an item over a valid drop target."
    },
    {
      "type": "dragleave",
      "description": "Fired when a dragged item leaves a valid drop target.",
      "triggeringElement": ["div", "section", "ul"],
      "userAction": "Move the dragged item away from the drop target."
    },
    {
      "type": "drop",
      "description": "Fired when an element or text selection is dropped on a valid drop target.",
      "triggeringElement": ["div", "section", "ul"],
      "userAction": "Release the dragged item onto the drop target."
    },
    {
      "type": "dragend",
      "description": "Fired when a drag operation is ended.",
      "triggeringElement": ["img", "div", "span"],
      "userAction": "End the drag operation (either by dropping or cancelling)."
    }
  ],
  "FileEvents": [
    {
      "type": "change",
      "description": "Fired when the value of a file input element changes.",
      "triggeringElement": ["input", "span"],
      "userAction": "Select or change a file in the file input."
    },
    {
      "type": "input",
      "description": "Fired when the value of an input element changes.",
      "triggeringElement": ["input", "textarea"],
      "userAction": "Type in or modify the content of an input or textarea."
    }
  ],
  "WheelEvents": [
    {
      "type": "wheel",
      "description": "Fired when the mouse wheel is used to scroll the page or an element.",
      "triggeringElement": ["document", "body"],
      "userAction": "Use the mouse wheel to scroll up or down."
    }
  ],
  "ScrollEvents": [
    {
      "type": "scroll",
      "description": "Fired when an element or the document view is being scrolled.",
      "triggeringElement": ["document", "body"],
      "userAction": "Scroll the content within an element or the page."
    }
  ]
,
  "FocusEvents": [
    {
      "type": "focus",
      "description": "Fired when an element receives focus.",
      "triggeringElement": ["input", "textarea", "select"],
      "userAction": "Click on or tab to an input element."
    },
    {
      "type": "blur",
      "description": "Fired when an element loses focus.",
      "triggeringElement": ["input", "textarea", "select"],
      "userAction": "Click away from or tab out of an input element."
    }
  ]
  ,
  "FormEvents": [
    {
      "type": "submit",
      "description": "Fired when a form is submitted.",
      "triggeringElement": ["form"],
      "userAction": "Click the submit button or press Enter in a form field."
    },
    {
      "type": "reset",
      "description": "Fired when a form is reset.",
      "triggeringElement": ["form"],
      "userAction": "Click the reset button in a form."
  }]
}